<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">

    <bean id="vfsProviderFactory" class="org.jahia.modules.external.vfs.VFSProviderFactory"/>

    <bean id="moduleSessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean"
          depends-on="settingsBean">
        <property name="dataSource">
            <ref bean="dataSource"/>
        </property>
        <property value="org.jahia.modules" name="packagesToScan"/>
        <property name="hibernateProperties">
            <bean class="org.springframework.beans.factory.config.PropertiesFactoryBean">
                <property name="properties">
                    <map>
                        <entry value="${hibernate.dialect}" key="hibernate.dialect"/>
                        <entry value="none" key="hibernate.hbm2ddl.auto"/>
                        <entry value="false" key="hibernate.show_sql"/>
                        <entry value="net.sf.ehcache.hibernate.SharingEhcacheProvider"
                               key="hibernate.cache.provider_class"/>
                        <entry value="false" key="hibernate.cache.use_second_level_cache"/>
                        <entry value="false" key="hibernate.cache.use_query_cache"/>
                        <entry value="16" key="hibernate.jdbc.batch_size"/>
                        <entry value="16" key="hibernate.default_batch_fetch_size"/>
                        <entry value="3" key="hibernate.max_fetch_depth"/>
                        <entry value="true 1, false 0" key="hibernate.query.substitutions"/>
                        <entry value="false" key="hibernate.generate_statistics"/>
                        <entry value="false" key="hibernate.cache.use_structured_entries"/>
                        <entry value="org.jahia.hibernate.ehcachemanager"
                               key="org.jahia.hibernate.ehcache.existingCacheManagerName"/>
                    </map>
                </property>
            </bean>
        </property>
        <property name="eventListeners">
            <map>
                <entry key="merge">
                    <bean class="org.springframework.orm.hibernate3.support.IdTransferringMergeEventListener"/>
                </entry>
            </map>
        </property>
        <property value="org.hibernate.cfg.AnnotationConfiguration" name="configurationClass"/>
    </bean>

    <!--<bean id="MyStoreProvider" class="org.jahia.services.content.impl.external.ExternalContentStoreProvider"  parent="AbstractJCRStoreProvider">-->
    <!--<property name="key" value="my"/>-->
    <!--<property name="dataSource" >-->
    <!--<bean class="org.jahia.services.content.impl.external.fs.FSDataSource">-->
    <!--<property name="root" value="/tmp"/>-->
    <!--</bean>-->
    <!--</property>-->
    <!--<property name="mountPoint" value="/tmp"/>-->
    <!--</bean>-->


    <!--<bean id="LdapStoreProvider" class="org.jahia.services.content.impl.external.ExternalContentStoreProvider"  parent="AbstractJCRStoreProvider">-->
    <!--<property name="key" value="myldap"/>-->
    <!--<property name="dataSource" >-->
    <!--<bean class="org.jahia.services.content.impl.external.users.UsersDataSource">-->
    <!--</bean>-->
    <!--</property>-->
    <!--<property name="mountPoint" value="/ldap"/>-->
    <!--</bean>-->

    <!--<bean id="VFStoreProvider" class="org.jahia.services.content.impl.external.ExternalContentStoreProvider"  parent="AbstractJCRStoreProvider">-->
    <!--<property name="key" value="myvfs"/>-->
    <!--<property name="dataSource" >-->
    <!--<bean class="org.jahia.services.content.impl.external.vfs.VFSDataSource">-->
    <!--<property name="root" value="file:///Users/toto/tmp"/>-->
    <!--</bean>-->
    <!--</property>-->
    <!--<property name="mountPoint" value="/tmp2"/>-->
    <!--</bean>-->

    <bean id="ExternalContentStoreProvider" class="org.jahia.modules.external.ExternalContentStoreProvider"
          parent="AbstractJCRStoreProvider" abstract="true">
        <property name="hibernateSession" ref="moduleSessionFactory"/>
    </bean>

    <!--<bean id="ModuleStoreProvider" parent="ExternalContentStoreProvider">-->
    <!--<property name="key" value="module"/>-->
    <!--<property name="dataSource" ref="ModulesDataSource"/>-->
    <!--<property name="mountPoint" value="/modulesFileSystem"/>-->
    <!--</bean>-->

    <bean id="ExternalStoreProviderPrototype" class="org.jahia.modules.external.ExternalContentStoreProvider"
          parent="AbstractJCRStoreProviderPrototype" scope="prototype">
        <property name="hibernateSession" ref="moduleSessionFactory"/>
    </bean>

    <bean id="ModulesDataSourcePrototype" class="org.jahia.modules.external.modules.ModulesDataSource"
          scope="prototype">
        <property name="supportedNodeTypes">
            <list>
                <value>jnt:nodeTypeFolder</value>
                <value>jnt:templateTypeFolder</value>
                <value>jnt:cssFolder</value>
                <value>jnt:cssFile</value>
                <value>jnt:javascriptFolder</value>
                <value>jnt:javascriptFile</value>
                <value>jnt:viewFile</value>
                <value>jnt:definitionFile</value>
                <value>nt:nodeType</value>
                <value>jnt:resourceBundleFolder</value>
            </list>
        </property>
        <property name="folderTypeMapping">
            <util:map key-type="java.lang.String" value-type="java.lang.String">
                <entry key="css" value="jnt:cssFolder"/>
                <entry key="javascript" value="jnt:javascriptFolder"/>
                <entry key="resources" value="jnt:resourceBundleFolder"/>
            </util:map>
        </property>
        <property name="fileTypeMapping">
            <util:map key-type="java.lang.String" value-type="java.lang.String">
                <entry key="cnd" value="jnt:definitionFile"/>
                <entry key="css" value="jnt:cssFile"/>
                <entry key="js" value="jnt:javascriptFile"/>
                <entry key="jsp" value="jnt:viewFile"/>
                <entry key="properties" value="jnt:resourceBundleFile"/>
                <!-- we will do an additional check in the ModulesDataSource if the parent is the jnt:resourceBundleFolder -->
            </util:map>
        </property>
    </bean>

    <bean class="org.jahia.modules.external.osgi.ExternalProviderActivator"/>
</beans>